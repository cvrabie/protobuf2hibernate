// Generated by the protocol buffer compiler.  DO NOT EDIT!

package org.codeandmagic.protobuf2hibernate.sample;

public  final class Cat extends
    com.google.protobuf.GeneratedMessage {
  // Use Cat.newBuilder() to construct.
  private Cat() {}
  
  private static final Cat defaultInstance = new Cat();
  public static Cat getDefaultInstance() {
    return defaultInstance;
  }
  
  public Cat getDefaultInstanceForType() {
    return defaultInstance;
  }
  
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.codeandmagic.protobuf2hibernate.sample.Descriptor_Cat.internal_static_domain_Cat_descriptor;
  }
  
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.codeandmagic.protobuf2hibernate.sample.Descriptor_Cat.internal_static_domain_Cat_fieldAccessorTable;
  }
  
  // required string uuid = 1;
  public static final int UUID_FIELD_NUMBER = 1;
  private boolean hasUuid;
  private java.lang.String uuid_ = "";
  public boolean hasUuid() { return hasUuid; }
  public java.lang.String getUuid() { return uuid_; }
  
  // required int64 created = 2;
  public static final int CREATED_FIELD_NUMBER = 2;
  private boolean hasCreated;
  private long created_ = 0L;
  public boolean hasCreated() { return hasCreated; }
  public long getCreated() { return created_; }
  
  // required string name = 3;
  public static final int NAME_FIELD_NUMBER = 3;
  private boolean hasName;
  private java.lang.String name_ = "";
  public boolean hasName() { return hasName; }
  public java.lang.String getName() { return name_; }
  
  // optional float hairLength = 4;
  public static final int HAIRLENGTH_FIELD_NUMBER = 4;
  private boolean hasHairLength;
  private float hairLength_ = 0F;
  public boolean hasHairLength() { return hasHairLength; }
  public float getHairLength() { return hairLength_; }
  
  // repeated string kittens = 5;
  public static final int KITTENS_FIELD_NUMBER = 5;
  private java.util.List<java.lang.String> kittens_ =
    java.util.Collections.emptyList();
  public java.util.List<java.lang.String> getKittensList() {
    return kittens_;
  }
  public int getKittensCount() { return kittens_.size(); }
  public java.lang.String getKittens(int index) {
    return kittens_.get(index);
  }
  
  // optional .domain.Person owner = 6;
  public static final int OWNER_FIELD_NUMBER = 6;
  private boolean hasOwner;
  private org.codeandmagic.protobuf2hibernate.sample.Person owner_ = org.codeandmagic.protobuf2hibernate.sample.Person.getDefaultInstance();
  public boolean hasOwner() { return hasOwner; }
  public org.codeandmagic.protobuf2hibernate.sample.Person getOwner() { return owner_; }
  
  public boolean equals(Object otherObject) {
    if (otherObject == this) return true;
    if (!(otherObject instanceof Cat)) return false;
    if (hashCode() != otherObject.hashCode()) return false;
    Cat other = (Cat) otherObject;
    if (hasUuid) {
      if (!other.hasUuid) return false;
      if (!uuid_.equals(other.uuid_)) return false;
    } else {
      if (other.hasUuid) return false;
    }
    if (hasCreated) {
      if (!other.hasCreated) return false;
      if (created_ != other.created_) return false;
    } else {
      if (other.hasCreated) return false;
    }
    if (hasName) {
      if (!other.hasName) return false;
      if (!name_.equals(other.name_)) return false;
    } else {
      if (other.hasName) return false;
    }
    if (hasHairLength) {
      if (!other.hasHairLength) return false;
      if (Float.floatToIntBits(hairLength_) != Float.floatToIntBits(other.hairLength_)) return false;
    } else {
      if (other.hasHairLength) return false;
    }
    if (!kittens_.equals(other.kittens_)) return false;
    if (hasOwner) {
      if (!other.hasOwner) return false;
      if (!owner_.equals(other.owner_)) return false;
    } else {
      if (other.hasOwner) return false;
    }
    return getUnknownFields().equals(other.getUnknownFields());
  }
  public boolean super_equals(final Object otherObject) { return super.equals(otherObject); }
  
  private int computedHashCode = 0;
  public int hashCode() {
    if (computedHashCode == 0) {
      computedHashCode = super.hashCode();
    }
    return computedHashCode;
  }
  public int super_hashCode() { return super.hashCode(); }
  
  public final boolean isInitialized() {
    if (!hasUuid) return false;
    if (!hasCreated) return false;
    if (!hasName) return false;
    if (hasOwner()) {
      if (!getOwner().isInitialized()) return false;
    }
    return true;
  }
  
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (hasUuid()) {
      output.writeString(1, getUuid());
    }
    if (hasCreated()) {
      output.writeInt64(2, getCreated());
    }
    if (hasName()) {
      output.writeString(3, getName());
    }
    if (hasHairLength()) {
      output.writeFloat(4, getHairLength());
    }
    for (java.lang.String element : getKittensList()) {
      output.writeString(5, element);
    }
    if (hasOwner()) {
      output.writeMessage(6, getOwner());
    }
    getUnknownFields().writeTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
  
    size = 0;
    if (hasUuid()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getUuid());
    }
    if (hasCreated()) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, getCreated());
    }
    if (hasName()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getName());
    }
    if (hasHairLength()) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, getHairLength());
    }
    {
      int dataSize = 0;
      for (java.lang.String element : getKittensList()) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeStringSizeNoTag(element);
      }
      size += dataSize;
      size += 1 * getKittensList().size();
    }
    if (hasOwner()) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getOwner());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }
  
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data).buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data, extensionRegistry)
             .buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data).buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return newBuilder().mergeFrom(data, extensionRegistry)
             .buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input).buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input, extensionRegistry)
             .buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return newBuilder().mergeDelimitedFrom(input).buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
             .buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input).buildParsed();
  }
  public static org.codeandmagic.protobuf2hibernate.sample.Cat parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return newBuilder().mergeFrom(input, extensionRegistry)
             .buildParsed();
  }
  
  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.codeandmagic.protobuf2hibernate.sample.Cat prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }
  
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> {
    private org.codeandmagic.protobuf2hibernate.sample.Cat result;
    
    // Construct using org.codeandmagic.protobuf2hibernate.sample.Cat.newBuilder()
    private Builder() {}
    
    private static Builder create() {
      Builder builder = new Builder();
      builder.result = new org.codeandmagic.protobuf2hibernate.sample.Cat();
      return builder;
    }
    
    protected org.codeandmagic.protobuf2hibernate.sample.Cat internalGetResult() {
      return result;
    }
    
    public Builder clear() {
      if (result == null) {
        throw new IllegalStateException(
          "Cannot call clear() after build().");
      }
      result = new org.codeandmagic.protobuf2hibernate.sample.Cat();
      return this;
    }
    
    public Builder clone() {
      return create().mergeFrom(result);
    }
    
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.codeandmagic.protobuf2hibernate.sample.Cat.getDescriptor();
    }
    
    public org.codeandmagic.protobuf2hibernate.sample.Cat getDefaultInstanceForType() {
      return org.codeandmagic.protobuf2hibernate.sample.Cat.getDefaultInstance();
    }
    
    public boolean isInitialized() {
      return result.isInitialized();
    }
    public org.codeandmagic.protobuf2hibernate.sample.Cat build() {
      if (result != null && !isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return buildPartial();
    }
    
    private org.codeandmagic.protobuf2hibernate.sample.Cat buildParsed()
        throws com.google.protobuf.InvalidProtocolBufferException {
      if (!isInitialized()) {
        throw newUninitializedMessageException(
          result).asInvalidProtocolBufferException();
      }
      return buildPartial();
    }
    
    public org.codeandmagic.protobuf2hibernate.sample.Cat buildPartial() {
      if (result == null) {
        throw new IllegalStateException(
          "build() has already been called on this Builder.");
      }
      if (result.kittens_ != java.util.Collections.EMPTY_LIST) {
        result.kittens_ =
          java.util.Collections.unmodifiableList(result.kittens_);
      }
      org.codeandmagic.protobuf2hibernate.sample.Cat returnMe = result;
      result = null;
      return returnMe;
    }
    
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.codeandmagic.protobuf2hibernate.sample.Cat) {
        return mergeFrom((org.codeandmagic.protobuf2hibernate.sample.Cat)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }
    
    public Builder mergeFrom(org.codeandmagic.protobuf2hibernate.sample.Cat other) {
      if (other == org.codeandmagic.protobuf2hibernate.sample.Cat.getDefaultInstance()) return this;
      if (other.hasUuid()) {
        setUuid(other.getUuid());
      }
      if (other.hasCreated()) {
        setCreated(other.getCreated());
      }
      if (other.hasName()) {
        setName(other.getName());
      }
      if (other.hasHairLength()) {
        setHairLength(other.getHairLength());
      }
      if (!other.kittens_.isEmpty()) {
        if (result.kittens_.isEmpty()) {
          result.kittens_ = new java.util.ArrayList<java.lang.String>();
        }
        result.kittens_.addAll(other.kittens_);
      }
      if (other.hasOwner()) {
        mergeOwner(other.getOwner());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }
    
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder(
          this.getUnknownFields());
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            this.setUnknownFields(unknownFields.build());
            return this;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              this.setUnknownFields(unknownFields.build());
              return this;
            }
            break;
          }
          case 10: {
            setUuid(input.readString());
            break;
          }
          case 16: {
            setCreated(input.readInt64());
            break;
          }
          case 26: {
            setName(input.readString());
            break;
          }
          case 37: {
            setHairLength(input.readFloat());
            break;
          }
          case 42: {
            addKittens(input.readString());
            break;
          }
          case 50: {
            org.codeandmagic.protobuf2hibernate.sample.Person.Builder subBuilder = org.codeandmagic.protobuf2hibernate.sample.Person.newBuilder();
            if (hasOwner()) {
              subBuilder.mergeFrom(getOwner());
            }
            input.readMessage(subBuilder, extensionRegistry);
            setOwner(subBuilder.buildPartial());
            break;
          }
        }
      }
    }
    
    
    // required string uuid = 1;
    public boolean hasUuid() {
      return result.hasUuid();
    }
    public java.lang.String getUuid() {
      return result.getUuid();
    }
    public Builder setUuid(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasUuid = true;
      result.uuid_ = value;
      return this;
    }
    public Builder clearUuid() {
      result.hasUuid = false;
      result.uuid_ = getDefaultInstance().getUuid();
      return this;
    }
    
    // required int64 created = 2;
    public boolean hasCreated() {
      return result.hasCreated();
    }
    public long getCreated() {
      return result.getCreated();
    }
    public Builder setCreated(long value) {
      result.hasCreated = true;
      result.created_ = value;
      return this;
    }
    public Builder clearCreated() {
      result.hasCreated = false;
      result.created_ = 0L;
      return this;
    }
    
    // required string name = 3;
    public boolean hasName() {
      return result.hasName();
    }
    public java.lang.String getName() {
      return result.getName();
    }
    public Builder setName(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder clearName() {
      result.hasName = false;
      result.name_ = getDefaultInstance().getName();
      return this;
    }
    
    // optional float hairLength = 4;
    public boolean hasHairLength() {
      return result.hasHairLength();
    }
    public float getHairLength() {
      return result.getHairLength();
    }
    public Builder setHairLength(float value) {
      result.hasHairLength = true;
      result.hairLength_ = value;
      return this;
    }
    public Builder clearHairLength() {
      result.hasHairLength = false;
      result.hairLength_ = 0F;
      return this;
    }
    
    // repeated string kittens = 5;
    public java.util.List<java.lang.String> getKittensList() {
      return java.util.Collections.unmodifiableList(result.kittens_);
    }
    public int getKittensCount() {
      return result.getKittensCount();
    }
    public java.lang.String getKittens(int index) {
      return result.getKittens(index);
    }
    public Builder setKittens(int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  result.kittens_.set(index, value);
      return this;
    }
    public Builder addKittens(java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  if (result.kittens_.isEmpty()) {
        result.kittens_ = new java.util.ArrayList<java.lang.String>();
      }
      result.kittens_.add(value);
      return this;
    }
    public Builder addAllKittens(
        java.lang.Iterable<? extends java.lang.String> values) {
      if (result.kittens_.isEmpty()) {
        result.kittens_ = new java.util.ArrayList<java.lang.String>();
      }
      super.addAll(values, result.kittens_);
      return this;
    }
    public Builder clearKittens() {
      result.kittens_ = java.util.Collections.emptyList();
      return this;
    }
    
    // optional .domain.Person owner = 6;
    public boolean hasOwner() {
      return result.hasOwner();
    }
    public org.codeandmagic.protobuf2hibernate.sample.Person getOwner() {
      return result.getOwner();
    }
    public Builder setOwner(org.codeandmagic.protobuf2hibernate.sample.Person value) {
      if (value == null) {
        throw new NullPointerException();
      }
      result.hasOwner = true;
      result.owner_ = value;
      return this;
    }
    public Builder setOwner(org.codeandmagic.protobuf2hibernate.sample.Person.Builder builderForValue) {
      result.hasOwner = true;
      result.owner_ = builderForValue.build();
      return this;
    }
    public Builder mergeOwner(org.codeandmagic.protobuf2hibernate.sample.Person value) {
      if (result.hasOwner() &&
          result.owner_ != org.codeandmagic.protobuf2hibernate.sample.Person.getDefaultInstance()) {
        result.owner_ =
          org.codeandmagic.protobuf2hibernate.sample.Person.newBuilder(result.owner_).mergeFrom(value).buildPartial();
      } else {
        result.owner_ = value;
      }
      result.hasOwner = true;
      return this;
    }
    public Builder clearOwner() {
      result.hasOwner = false;
      result.owner_ = org.codeandmagic.protobuf2hibernate.sample.Person.getDefaultInstance();
      return this;
    }
  }
  
  static {
    org.codeandmagic.protobuf2hibernate.sample.Descriptor_Cat.getDescriptor();
  }
  
  static {
    org.codeandmagic.protobuf2hibernate.sample.Descriptor_Cat.internalForceInit();
  }
}

